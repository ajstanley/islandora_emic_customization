<?php

/**
 * Implements hook_menu().
 */
function emic_customization_menu() {
  $items['islandora/emic/collection'] = array(
    'page callback' => 'islandora_critical_edition_custom_view',
    'type' => MENU_CALLBACK,
    'access callback' => 'user_access',
    'access arguments' => array(ISLANDORA_CRITICAL_EDITION_ADVANCED_READ),
  );
  return $items;
}

/**
 * Returns custom collection view.
 *
 * @param String $collection_pid
 *   PID of collection being displayed
 *
 * @return String
 *   HTML to display in collection view
 */
function islandora_critical_edition_custom_view($collection_pid, $limit = 12) {
  $offset = $limit * pager_find_page();
  $collection_array = emic_data($collection_pid, $offset, $limit);
  $total = $collection_array['response']['numFound'];
  $docs = $collection_array['response']['docs'];
  $path = drupal_get_path('module', 'emic_customization');
  if (count($docs) < 1) {
    return t("This collection is empty.");
  }
  $exclude_list = array(".", "..", ".DS_Store");
  $image_dir = "$path/images/";
  $images = array_values(array_diff(scandir($image_dir), $exclude_list));
  // Relevant data from the forms in their current state.
  $candidate_fields = array(
    'mods_titleInfo_title_mt' => 'labels',
    'mods_originInfo_publisher_ms' => 'publishers',
    'mods_name_role_roleTerm_text_ms' => 'roles',
    'mods_name_personal_role_roleTerm_text_ms' => 'roles',
    'mods_name_namePart_ms' => 'creators',
    'mods_name_personal_namePart_ms' => 'creators',
    'mods_relatedItem_originInfo_copyrightDate_dt' => 'date',
    'mods_originInfo_dateCreated_dt' => 'date',
  );
  $results = array();
  $output = "";
  foreach ($docs as $doc) {
    foreach ($candidate_fields as $field => $identifier) {
      if (!isset($results[$doc['PID']][$identifier])) {
        $results[$doc['PID']][$identifier] = (isset($doc[$field])) ? $doc[$field] : "";
      }
    }
  }
  foreach ($results as $pid => $data) {
    $header = array();
    $rows = array();
    if (is_array($data['publishers'])) {
      $publishers = implode(', ', $data['publishers']);
      $rows[] = array(
        array(
          'class' => array('collection_publisher_label collection_label'),
          'data' => t("Publisher"),
        ),
        array(
          'class' => 'collection_publisher collection_value',
          'data' => $publishers,
        ),
      );
    }
    if (is_array($data['roles'])) {
      $count = count($data['roles']);
      for ($i = 0; $i < $count; $i++) {
        $rows[] = array(
          array(
            'class' => array('collection_role collection_label'),
            'data' => ucfirst($data['roles'][$i]),
          ),
          array(
            'class' => ('collection_creator collection_value'),
            'data' => $data['creators'][$i],
          ),
        );
      }
    }
    if ($data['date']) {
      $date = new DateTime($data['date']);
      $rows[] = array(
        array(
          'class' => array('collection_date_label collection_label'),
          'data' => t("Date Created"),
        ),
        array(
          'class' => 'collection_date collection_value',
          'data' => $date->format('Y'),
        ),
      );
    }
    $range = count($images) - 1;
    $params = array(
      'path' => $image_dir . $images[mt_rand(0, $range)],
    );
    $image = theme('image', $params);
    $label = isset($data['labels'][0]) ? $data['labels'][0] : t("Unlabled object");
    $title_row = array(
      array(
        'data' => $image,
        'rowspan' => count($rows) + 1,
        'class' => 'emic_custom_pic'
      ),
      array(
        'data' => l($label, "islandora/object/$pid/view"),
        'colspan' => 2,
        'class' => 'collection_title'
      ),
    );
    array_unshift($rows, $title_row);

    $output .= theme('table', array('header' => $header, 'rows' => $rows, 'attributes' => array('class' => array('emic_custom_collection'))));
  }

  pager_default_initialize($total, $limit);
  $pager = theme('pager', array($quantity = $limit));
  drupal_add_css("$path/css/emic_customized.css");
  return $pager . $output;
}

/**
 * Gets Collection Members from Solr.
 *
 * @param String $collection_pid
 *   PID of collection being queried
 * @param integer $offset
 *   Query offset
 * @param integer $limit
 *   Query limit
 *
 * @return array
 *   Array fo returned solr values
 */
function emic_data($collection_pid, $offset = 0, $limit = 25) {
  $query = 'RELS_EXT_isMemberOf_uri_mt:' . '"' . $collection_pid . '"';
  $url = parse_url(variable_get('islandora_solr_url', 'localhost:8080/solr'));
  $solr = new Apache_Solr_Service($url['host'], $url['port'], $url['path'] . '/');
  $solr->setCreateDocuments(FALSE);
  try {
    $results = $solr->search($query, $offset, $limit);
    $json = json_decode($results->getRawResponse(), TRUE);
  }
  catch (Exception $e) {
    watchdog_exception('emic customizations', $e, 'Got an exception while searching for collection.', array(), WATCHDOG_ERROR);
  }
  return $json;
}

/**
 * Implements hook_islandora_breadcrumbs_alter().
 */
function emic_customization_islandora_breadcrumbs_alter(&$breadcrumbs, $context, $object = NULL) {
  $objects_to_reroute = array(
  'islandora:criticalEditionCollection',
  'islandora:sourceCollection',
  'islandora%3AcriticalEditionCollection',
  'islandora%3AsourceCollection',
  );
  $url = array_pop($breadcrumbs);
  preg_match("/href=\"(.*?)\"/i", $url, $matches);
  $raw_link = $matches[0];
  $link_parts = explode('/', $raw_link);
  $link = str_replace('"', '', array_pop($link_parts));
  if (in_array($link, $objects_to_reroute)) {
    $url = str_replace('/islandora/object/', '/islandora/emic/collection/', $url);
  }
  array_push($breadcrumbs, $url);
}
